from django.db.models import Sum
from django.shortcuts import render
from io import BytesIO
from django.http import HttpResponse
from django.template.loader import get_template
from django.views import View
from xhtml2pdf import pisa

from backend.models import Student, SystemSettings


def render_to_pdf(template_src, context_dict={}):
    template = get_template(template_src)
    html = template.render(context_dict)
    result = BytesIO()
    pdf = pisa.pisaDocument(BytesIO(html.encode("ISO-8859-1")), result)
    if not pdf.err:
        return HttpResponse(result.getvalue(), content_type='application/pdf')
    return None





# Opens up page as PDF
class ViewPDF(View):
    def get(self, request, *args, **kwargs):
        data = {
            "system_settings": SystemSettings.objects.all().first(),

            "object_list": Student.objects.all(),

            "total": Student.objects.aggregate(total=Sum('total_fees')).get('total')
        }
        pdf = render_to_pdf('backend/pdf_template.html', data)
        return HttpResponse(pdf, content_type='application/pdf')


# Automaticly downloads to PDF file
class DownloadPDF(View):
    def get(self, request, *args, **kwargs):
        data = {
            "system_settings": SystemSettings.objects.all().first(),

            "object_list": Student.objects.all(),

            "total": Student.objects.aggregate(total=Sum('total_fees')).get('total')
        }

        pdf = render_to_pdf('backend/pdf_template.html', data)

        response = HttpResponse(pdf, content_type='application/pdf')
        filename = "Invoice_%s.pdf" % ("12341231")
        content = "attachment; filename='%s'" % (filename)
        response['Content-Disposition'] = content
        return response


def index(request):
    context = {}
    return render(request, 'backend/index.html', context)